# Copyright 2013 Revolution Analytics
#    
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

importFrom("reshape2", melt)
importFrom("stats", quantile)


#pipes
export(
	plyrmr.options,
	gapply,
	magic.wand,
	group,
	group.f,
	gather,
	is.grouped,
	ungroup,
	output,
	input,
	mergeable,
	as.RDD,
	vectorized)
S3method(as.data.frame, pipermr)
S3method(as.data.frame, pipespark)
S3method(as.pipespark, data.frame)
S3method(as.pipespark, character)
S3method(as.pipespark, RDD)
S3method(as.pipermr, data.frame)
S3method(as.pipermr, character)
S3method(as.pipermr, "function")
S3method(as.pipermr, big.data)
S3method(as.pipermr, list)
S3method(as.big.data, list)
S3method(as.big.data, big.data)
S3method(print, pipe)
S3method(print, big.data)
S3method(gapply, pipermr)
S3method(gapply, pipespark)
S3method(group.f, pipermr)
S3method(group.f, pipespark)
S3method(ungroup, pipermr)
S3method(ungroup, pipespark)
S3method(gather, pipermr)
S3method(gather, pipespark)
S3method(output, pipermr)
S3method(output, pipespark)
S3method(as.RDD, pipespark)
#base
export(sample, nrow, ncol)
S3method(sample, default)
S3method(sample, data.frame)
S3method(sample, pipe)
S3method(nrow, pipe)
S3method(nrow, default)
S3method(ncol, pipe)
S3method(ncol, default)
S3method(names, pipe)
S3method(dim, pipe)
#plyr
#sql-ish
export(
	transmute,
	bind.cols,
	select,
	where,
	merge,
	get.format,
	to.rmr)
S3method(select, pipe)
S3method(select, data.frame)
S3method(transmute, pipe)
S3method(transmute, data.frame)
S3method(bind.cols, pipe)
S3method(bind.cols, data.frame)
S3method(where, pipe)
S3method(where, data.frame)
S3method(merge, pipe)
#arrange-like
export(
	top.k,
	bottom.k,
	moving.window,
	count,
	rbind,
	union,
	intersect)
S3method(count, data.frame)
S3method(count, pipe)
S3method(count, default)
S3method(quantile, pipe)
S3method(quantile, data.frame)
S3method(unique, pipe)
S3method(rbind, pipermr)
S3method(rbind, pipespark)
S3method(rbind, default)
S3method(union, data.frame)
S3method(union, pipe)
S3method(intersect, data.frame)
S3method(intersect, pipe)
#reshape2
export(dcast, melt)
S3method(dcast, pipe)
S3method(dcast, default)
S3method(melt, pipe)
S3method(melt, data.frame)
#other
export(extend)
export(`%|%`)
export(`%!%`)
export(VAR)
export(each.column)
export(available.spark.formats)
#fast summaries
#export(fast.summary)
#S3method(fast.summary, pipe)

#workaround  for R imports bug
importFrom(rmr2, rmr.options)
#real imports
importFrom(plyr, splat)
importFrom(plyr, count)
importFrom(plyr, ddply)
importFrom(dplyr, select)
importFrom(R.methodsS3, setMethodS3)
importFrom(R.methodsS3, getMethodS3)
importFrom(R.methodsS3, appendVarArgs)
importFrom(Hmisc, wtd.quantile)
importFrom(digest, digest)
importFrom(memoise, memoise)
importFrom(rjson, fromJSON)
importFrom(rjson, toJSON)
import(functional)
import(lazyeval)